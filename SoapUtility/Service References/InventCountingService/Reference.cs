//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapUtility.InventCountingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class CallContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Infolog", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Infolog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoapUtility.InventCountingService.InfologEntry[] EntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoapUtility.InventCountingService.InfologEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologEntry", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class InfologEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoapUtility.InventCountingService.InfologType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoapUtility.InventCountingService.InfologType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologType", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    public enum InfologType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventJournalTableContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class InventJournalTableContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmJournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmJournalNameIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmDescription {
            get {
                return this.parmDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDescriptionField, value) != true)) {
                    this.parmDescriptionField = value;
                    this.RaisePropertyChanged("parmDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmJournalId {
            get {
                return this.parmJournalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJournalIdField, value) != true)) {
                    this.parmJournalIdField = value;
                    this.RaisePropertyChanged("parmJournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmJournalNameId {
            get {
                return this.parmJournalNameIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJournalNameIdField, value) != true)) {
                    this.parmJournalNameIdField = value;
                    this.RaisePropertyChanged("parmJournalNameId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProxyBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.KernelInterop")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.XppObjectBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventSumContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventForItemUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.WarehouseContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.WmsLocationContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventAvailContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventJournalTransContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.SCForTransfer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventJournalTableContract))]
    public partial class ProxyBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventSumContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventForItemUnit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.WarehouseContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.WmsLocationContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventAvailContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventJournalTransContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.SCForTransfer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapUtility.InventCountingService.InventJournalTableContract))]
    public partial class XppObjectBase : SoapUtility.InventCountingService.ProxyBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventSumContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class InventSumContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailPhysicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailPhysical {
            get {
                return this.AvailPhysicalField;
            }
            set {
                if ((this.AvailPhysicalField.Equals(value) != true)) {
                    this.AvailPhysicalField = value;
                    this.RaisePropertyChanged("AvailPhysical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIdField, value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdField, value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventForItemUnit", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class InventForItemUnit : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIdField, value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitIdField, value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WarehouseContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class WarehouseContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmLocationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmSiteIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLocationId {
            get {
                return this.parmLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLocationIdField, value) != true)) {
                    this.parmLocationIdField = value;
                    this.RaisePropertyChanged("parmLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLocationName {
            get {
                return this.parmLocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLocationNameField, value) != true)) {
                    this.parmLocationNameField = value;
                    this.RaisePropertyChanged("parmLocationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSiteId {
            get {
                return this.parmSiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSiteIdField, value) != true)) {
                    this.parmSiteIdField = value;
                    this.RaisePropertyChanged("parmSiteId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WmsLocationContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class WmsLocationContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventAvailContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class InventAvailContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailPhysicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigurationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SyncIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WMSLocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailPhysical {
            get {
                return this.AvailPhysicalField;
            }
            set {
                if ((this.AvailPhysicalField.Equals(value) != true)) {
                    this.AvailPhysicalField = value;
                    this.RaisePropertyChanged("AvailPhysical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchId {
            get {
                return this.BatchIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchIdField, value) != true)) {
                    this.BatchIdField = value;
                    this.RaisePropertyChanged("BatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColorId {
            get {
                return this.ColorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorIdField, value) != true)) {
                    this.ColorIdField = value;
                    this.RaisePropertyChanged("ColorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigurationId {
            get {
                return this.ConfigurationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigurationIdField, value) != true)) {
                    this.ConfigurationIdField = value;
                    this.RaisePropertyChanged("ConfigurationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIdField, value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationIdField, value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialId {
            get {
                return this.SerialIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialIdField, value) != true)) {
                    this.SerialIdField = value;
                    this.RaisePropertyChanged("SerialId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteIdField, value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SizeId {
            get {
                return this.SizeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeIdField, value) != true)) {
                    this.SizeIdField = value;
                    this.RaisePropertyChanged("SizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SyncId {
            get {
                return this.SyncIdField;
            }
            set {
                if ((this.SyncIdField.Equals(value) != true)) {
                    this.SyncIdField = value;
                    this.RaisePropertyChanged("SyncId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WMSLocationId {
            get {
                return this.WMSLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WMSLocationIdField, value) != true)) {
                    this.WMSLocationIdField = value;
                    this.RaisePropertyChanged("WMSLocationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventJournalTransContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class InventJournalTransContract : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal parmCostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal parmCountedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmJournalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmLocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmSiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string parmWarehouseIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal parmCostPrice {
            get {
                return this.parmCostPriceField;
            }
            set {
                if ((this.parmCostPriceField.Equals(value) != true)) {
                    this.parmCostPriceField = value;
                    this.RaisePropertyChanged("parmCostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal parmCounted {
            get {
                return this.parmCountedField;
            }
            set {
                if ((this.parmCountedField.Equals(value) != true)) {
                    this.parmCountedField = value;
                    this.RaisePropertyChanged("parmCounted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmItemId {
            get {
                return this.parmItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmItemIdField, value) != true)) {
                    this.parmItemIdField = value;
                    this.RaisePropertyChanged("parmItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmJournalId {
            get {
                return this.parmJournalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJournalIdField, value) != true)) {
                    this.parmJournalIdField = value;
                    this.RaisePropertyChanged("parmJournalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLocationId {
            get {
                return this.parmLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLocationIdField, value) != true)) {
                    this.parmLocationIdField = value;
                    this.RaisePropertyChanged("parmLocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSiteId {
            get {
                return this.parmSiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSiteIdField, value) != true)) {
                    this.parmSiteIdField = value;
                    this.RaisePropertyChanged("parmSiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmWarehouseId {
            get {
                return this.parmWarehouseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWarehouseIdField, value) != true)) {
                    this.parmWarehouseIdField = value;
                    this.RaisePropertyChanged("parmWarehouseId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCForTransfer", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class SCForTransfer : SoapUtility.InventCountingService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLocationFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLocationToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ItemQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPosted {
            get {
                return this.IsPostedField;
            }
            set {
                if ((this.IsPostedField.Equals(value) != true)) {
                    this.IsPostedField = value;
                    this.RaisePropertyChanged("IsPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTransferred {
            get {
                return this.IsTransferredField;
            }
            set {
                if ((this.IsTransferredField.Equals(value) != true)) {
                    this.IsTransferredField = value;
                    this.RaisePropertyChanged("IsTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLocationFrom {
            get {
                return this.ItemLocationFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLocationFromField, value) != true)) {
                    this.ItemLocationFromField = value;
                    this.RaisePropertyChanged("ItemLocationFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLocationTo {
            get {
                return this.ItemLocationToField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLocationToField, value) != true)) {
                    this.ItemLocationToField = value;
                    this.RaisePropertyChanged("ItemLocationTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemQuantity {
            get {
                return this.ItemQuantityField;
            }
            set {
                if ((this.ItemQuantityField.Equals(value) != true)) {
                    this.ItemQuantityField = value;
                    this.RaisePropertyChanged("ItemQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="InventCountingService.JournalCountingService")]
    public interface JournalCountingService {
        
        // CODEGEN: Generating message contract since message GetCountingJournals has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetCountingJournals", ReplyAction="http://tempuri.org/JournalCountingService/GetCountingJournalsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetCountingJournalsResponse GetCountingJournals(SoapUtility.InventCountingService.GetCountingJournals request);
        
        // CODEGEN: Generating message contract since message GetItemsAvailable has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetItemsAvailable", ReplyAction="http://tempuri.org/JournalCountingService/GetItemsAvailableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetItemsAvailableResponse GetItemsAvailable(SoapUtility.InventCountingService.GetItemsAvailable request);
        
        // CODEGEN: Generating message contract since message GetItemUoM has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetItemUoM", ReplyAction="http://tempuri.org/JournalCountingService/GetItemUoMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetItemUoMResponse GetItemUoM(SoapUtility.InventCountingService.GetItemUoM request);
        
        // CODEGEN: Generating message contract since message GetWarehouse has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetWarehouse", ReplyAction="http://tempuri.org/JournalCountingService/GetWarehouseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetWarehouseResponse GetWarehouse(SoapUtility.InventCountingService.GetWarehouse request);
        
        // CODEGEN: Generating message contract since message GetWHLocations has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetWHLocations", ReplyAction="http://tempuri.org/JournalCountingService/GetWHLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetWHLocationsResponse GetWHLocations(SoapUtility.InventCountingService.GetWHLocations request);
        
        // CODEGEN: Generating message contract since message GetYearFGInventory has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/GetYearFGInventory", ReplyAction="http://tempuri.org/JournalCountingService/GetYearFGInventoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.GetYearFGInventoryResponse GetYearFGInventory(SoapUtility.InventCountingService.GetYearFGInventory request);
        
        // CODEGEN: Generating message contract since message UpdateCounting has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/UpdateCounting", ReplyAction="http://tempuri.org/JournalCountingService/UpdateCountingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.UpdateCountingResponse UpdateCounting(SoapUtility.InventCountingService.UpdateCounting request);
        
        // CODEGEN: Generating message contract since message UpdateTransferItems has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/JournalCountingService/UpdateTransferItems", ReplyAction="http://tempuri.org/JournalCountingService/UpdateTransferItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SoapUtility.InventCountingService.Fault), Action="http://tempuri.org/JournalCountingService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        SoapUtility.InventCountingService.UpdateTransferItemsResponse UpdateTransferItems(SoapUtility.InventCountingService.UpdateTransferItems request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountingJournals", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetCountingJournals {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        public GetCountingJournals() {
        }
        
        public GetCountingJournals(SoapUtility.InventCountingService.CallContext CallContext) {
            this.CallContext = CallContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountingJournalsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetCountingJournalsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.InventJournalTableContract[] result;
        
        public GetCountingJournalsResponse() {
        }
        
        public GetCountingJournalsResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.InventJournalTableContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemsAvailable", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetItemsAvailable {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        public GetItemsAvailable() {
        }
        
        public GetItemsAvailable(SoapUtility.InventCountingService.CallContext CallContext) {
            this.CallContext = CallContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemsAvailableResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetItemsAvailableResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.InventSumContract[] result;
        
        public GetItemsAvailableResponse() {
        }
        
        public GetItemsAvailableResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.InventSumContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemUoM", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetItemUoM {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string allItems;
        
        public GetItemUoM() {
        }
        
        public GetItemUoM(SoapUtility.InventCountingService.CallContext CallContext, string allItems) {
            this.CallContext = CallContext;
            this.allItems = allItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetItemUoMResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetItemUoMResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.InventForItemUnit[] result;
        
        public GetItemUoMResponse() {
        }
        
        public GetItemUoMResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.InventForItemUnit[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWarehouse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetWarehouse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string siteId;
        
        public GetWarehouse() {
        }
        
        public GetWarehouse(SoapUtility.InventCountingService.CallContext CallContext, string siteId) {
            this.CallContext = CallContext;
            this.siteId = siteId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWarehouseResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetWarehouseResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.WarehouseContract[] result;
        
        public GetWarehouseResponse() {
        }
        
        public GetWarehouseResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.WarehouseContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWHLocations", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetWHLocations {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        public GetWHLocations() {
        }
        
        public GetWHLocations(SoapUtility.InventCountingService.CallContext CallContext) {
            this.CallContext = CallContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWHLocationsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetWHLocationsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.WmsLocationContract[] result;
        
        public GetWHLocationsResponse() {
        }
        
        public GetWHLocationsResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.WmsLocationContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetYearFGInventory", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetYearFGInventory {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public int startId;
        
        public GetYearFGInventory() {
        }
        
        public GetYearFGInventory(SoapUtility.InventCountingService.CallContext CallContext, int startId) {
            this.CallContext = CallContext;
            this.startId = startId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetYearFGInventoryResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class GetYearFGInventoryResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.InventAvailContract[] result;
        
        public GetYearFGInventoryResponse() {
        }
        
        public GetYearFGInventoryResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.InventAvailContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCounting", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class UpdateCounting {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string journald;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public SoapUtility.InventCountingService.InventJournalTransContract[] lines;
        
        public UpdateCounting() {
        }
        
        public UpdateCounting(SoapUtility.InventCountingService.CallContext CallContext, string journald, SoapUtility.InventCountingService.InventJournalTransContract[] lines) {
            this.CallContext = CallContext;
            this.journald = journald;
            this.lines = lines;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCountingResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class UpdateCountingResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.InventJournalTransContract[] result;
        
        public UpdateCountingResponse() {
        }
        
        public UpdateCountingResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.InventJournalTransContract[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransferItems", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class UpdateTransferItems {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.SCForTransfer[] lines;
        
        public UpdateTransferItems() {
        }
        
        public UpdateTransferItems(SoapUtility.InventCountingService.CallContext CallContext, SoapUtility.InventCountingService.SCForTransfer[] lines) {
            this.CallContext = CallContext;
            this.lines = lines;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransferItemsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class UpdateTransferItemsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public SoapUtility.InventCountingService.Infolog Infolog;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public SoapUtility.InventCountingService.SCForTransfer[] result;
        
        public UpdateTransferItemsResponse() {
        }
        
        public UpdateTransferItemsResponse(SoapUtility.InventCountingService.Infolog Infolog, SoapUtility.InventCountingService.SCForTransfer[] result) {
            this.Infolog = Infolog;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface JournalCountingServiceChannel : SoapUtility.InventCountingService.JournalCountingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JournalCountingServiceClient : System.ServiceModel.ClientBase<SoapUtility.InventCountingService.JournalCountingService>, SoapUtility.InventCountingService.JournalCountingService {
        
        public JournalCountingServiceClient() {
        }
        
        public JournalCountingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JournalCountingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalCountingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalCountingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetCountingJournalsResponse SoapUtility.InventCountingService.JournalCountingService.GetCountingJournals(SoapUtility.InventCountingService.GetCountingJournals request) {
            return base.Channel.GetCountingJournals(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetCountingJournals(SoapUtility.InventCountingService.CallContext CallContext, out SoapUtility.InventCountingService.InventJournalTableContract[] result) {
            SoapUtility.InventCountingService.GetCountingJournals inValue = new SoapUtility.InventCountingService.GetCountingJournals();
            inValue.CallContext = CallContext;
            SoapUtility.InventCountingService.GetCountingJournalsResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetCountingJournals(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetItemsAvailableResponse SoapUtility.InventCountingService.JournalCountingService.GetItemsAvailable(SoapUtility.InventCountingService.GetItemsAvailable request) {
            return base.Channel.GetItemsAvailable(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetItemsAvailable(SoapUtility.InventCountingService.CallContext CallContext, out SoapUtility.InventCountingService.InventSumContract[] result) {
            SoapUtility.InventCountingService.GetItemsAvailable inValue = new SoapUtility.InventCountingService.GetItemsAvailable();
            inValue.CallContext = CallContext;
            SoapUtility.InventCountingService.GetItemsAvailableResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetItemsAvailable(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetItemUoMResponse SoapUtility.InventCountingService.JournalCountingService.GetItemUoM(SoapUtility.InventCountingService.GetItemUoM request) {
            return base.Channel.GetItemUoM(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetItemUoM(SoapUtility.InventCountingService.CallContext CallContext, string allItems, out SoapUtility.InventCountingService.InventForItemUnit[] result) {
            SoapUtility.InventCountingService.GetItemUoM inValue = new SoapUtility.InventCountingService.GetItemUoM();
            inValue.CallContext = CallContext;
            inValue.allItems = allItems;
            SoapUtility.InventCountingService.GetItemUoMResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetItemUoM(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetWarehouseResponse SoapUtility.InventCountingService.JournalCountingService.GetWarehouse(SoapUtility.InventCountingService.GetWarehouse request) {
            return base.Channel.GetWarehouse(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetWarehouse(SoapUtility.InventCountingService.CallContext CallContext, string siteId, out SoapUtility.InventCountingService.WarehouseContract[] result) {
            SoapUtility.InventCountingService.GetWarehouse inValue = new SoapUtility.InventCountingService.GetWarehouse();
            inValue.CallContext = CallContext;
            inValue.siteId = siteId;
            SoapUtility.InventCountingService.GetWarehouseResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetWarehouse(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetWHLocationsResponse SoapUtility.InventCountingService.JournalCountingService.GetWHLocations(SoapUtility.InventCountingService.GetWHLocations request) {
            return base.Channel.GetWHLocations(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetWHLocations(SoapUtility.InventCountingService.CallContext CallContext, out SoapUtility.InventCountingService.WmsLocationContract[] result) {
            SoapUtility.InventCountingService.GetWHLocations inValue = new SoapUtility.InventCountingService.GetWHLocations();
            inValue.CallContext = CallContext;
            SoapUtility.InventCountingService.GetWHLocationsResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetWHLocations(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.GetYearFGInventoryResponse SoapUtility.InventCountingService.JournalCountingService.GetYearFGInventory(SoapUtility.InventCountingService.GetYearFGInventory request) {
            return base.Channel.GetYearFGInventory(request);
        }
        
        public SoapUtility.InventCountingService.Infolog GetYearFGInventory(SoapUtility.InventCountingService.CallContext CallContext, int startId, out SoapUtility.InventCountingService.InventAvailContract[] result) {
            SoapUtility.InventCountingService.GetYearFGInventory inValue = new SoapUtility.InventCountingService.GetYearFGInventory();
            inValue.CallContext = CallContext;
            inValue.startId = startId;
            SoapUtility.InventCountingService.GetYearFGInventoryResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).GetYearFGInventory(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.UpdateCountingResponse SoapUtility.InventCountingService.JournalCountingService.UpdateCounting(SoapUtility.InventCountingService.UpdateCounting request) {
            return base.Channel.UpdateCounting(request);
        }
        
        public SoapUtility.InventCountingService.Infolog UpdateCounting(SoapUtility.InventCountingService.CallContext CallContext, string journald, SoapUtility.InventCountingService.InventJournalTransContract[] lines, out SoapUtility.InventCountingService.InventJournalTransContract[] result) {
            SoapUtility.InventCountingService.UpdateCounting inValue = new SoapUtility.InventCountingService.UpdateCounting();
            inValue.CallContext = CallContext;
            inValue.journald = journald;
            inValue.lines = lines;
            SoapUtility.InventCountingService.UpdateCountingResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).UpdateCounting(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SoapUtility.InventCountingService.UpdateTransferItemsResponse SoapUtility.InventCountingService.JournalCountingService.UpdateTransferItems(SoapUtility.InventCountingService.UpdateTransferItems request) {
            return base.Channel.UpdateTransferItems(request);
        }
        
        public SoapUtility.InventCountingService.Infolog UpdateTransferItems(SoapUtility.InventCountingService.CallContext CallContext, SoapUtility.InventCountingService.SCForTransfer[] lines, out SoapUtility.InventCountingService.SCForTransfer[] result) {
            SoapUtility.InventCountingService.UpdateTransferItems inValue = new SoapUtility.InventCountingService.UpdateTransferItems();
            inValue.CallContext = CallContext;
            inValue.lines = lines;
            SoapUtility.InventCountingService.UpdateTransferItemsResponse retVal = ((SoapUtility.InventCountingService.JournalCountingService)(this)).UpdateTransferItems(inValue);
            result = retVal.result;
            return retVal.Infolog;
        }
    }
}
