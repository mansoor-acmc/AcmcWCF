//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebservice.SalesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SalesService.ISalesService")]
    public interface ISalesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/FindSalesOrder", ReplyAction="http://tempuri.org/ISalesService/FindSalesOrderResponse")]
        SyncServices.SalesTable FindSalesOrder(string salesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/FindPickingList", ReplyAction="http://tempuri.org/ISalesService/FindPickingListResponse")]
        SyncServices.SalesTable FindPickingList(string pickingId, string userName, string device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/ValidatePallets", ReplyAction="http://tempuri.org/ISalesService/ValidatePalletsResponse")]
        SyncServices.SalesLine[] ValidatePallets(string salesId, string itemId, string configId, string pickingId, string[] pallets, string userName, string device, long lineRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/CheckPalletAvailable", ReplyAction="http://tempuri.org/ISalesService/CheckPalletAvailableResponse")]
        SyncServices.SalesLine CheckPalletAvailable(string salesId, string itemId, string configId, string pickingId, string pallet, string userName, string device, System.DateTime dtSave, long lineRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/CheckPalletAvailableMulti", ReplyAction="http://tempuri.org/ISalesService/CheckPalletAvailableMultiResponse")]
        SyncServices.SalesLine[] CheckPalletAvailableMulti(string salesId, string itemId, string configId, string pickingId, SyncServices.SalesOrderAX.PalletItemContract[] pallets, string userName, string device, long lineRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/SalesDeliveryNote", ReplyAction="http://tempuri.org/ISalesService/SalesDeliveryNoteResponse")]
        string SalesDeliveryNote(string _salesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/UnreservePallet", ReplyAction="http://tempuri.org/ISalesService/UnreservePalletResponse")]
        string UnreservePallet(string pallet, string pickingId, string userName, string device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/GetLatestPallets", ReplyAction="http://tempuri.org/ISalesService/GetLatestPalletsResponse")]
        SyncServices.SalesLine[] GetLatestPallets(string pickingId, string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/SavePickingLoad", ReplyAction="http://tempuri.org/ISalesService/SavePickingLoadResponse")]
        void SavePickingLoad(string pickingId, System.DateTime startLoad, System.DateTime stopLoad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/CustomersDeliveryByQty", ReplyAction="http://tempuri.org/ISalesService/CustomersDeliveryByQtyResponse")]
        SyncServices.SalesOrderAX.CustomerDeliveryContract[] CustomersDeliveryByQty(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/CustomersDeliveryByTrucks", ReplyAction="http://tempuri.org/ISalesService/CustomersDeliveryByTrucksResponse")]
        SyncServices.SalesOrderAX.CustomerDeliveryContract[] CustomersDeliveryByTrucks(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/GetPing", ReplyAction="http://tempuri.org/ISalesService/GetPingResponse")]
        string GetPing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/ReceivePickingList", ReplyAction="http://tempuri.org/ISalesService/ReceivePickingListResponse")]
        SyncServices.SalesTable ReceivePickingList(string userName, string device);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/SaveLoginHistory", ReplyAction="http://tempuri.org/ISalesService/SaveLoginHistoryResponse")]
        void SaveLoginHistory(string userName, string device, string deviceIp, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/GetFGLines", ReplyAction="http://tempuri.org/ISalesService/GetFGLinesResponse")]
        SyncServices.SalesOrderAX.FGLineContract[] GetFGLines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/GetDeliveries", ReplyAction="http://tempuri.org/ISalesService/GetDeliveriesResponse")]
        SyncServices.SalesOrderAX.FGDeliveryContract[] GetDeliveries(System.DateTime dateSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/GetUserData", ReplyAction="http://tempuri.org/ISalesService/GetUserDataResponse")]
        SyncServices.UserData[] GetUserData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesService/ChangeLoadingLine", ReplyAction="http://tempuri.org/ISalesService/ChangeLoadingLineResponse")]
        string ChangeLoadingLine(string pickingId, int loadingLineNum);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesServiceChannel : TestWebservice.SalesService.ISalesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesServiceClient : System.ServiceModel.ClientBase<TestWebservice.SalesService.ISalesService>, TestWebservice.SalesService.ISalesService {
        
        public SalesServiceClient() {
        }
        
        public SalesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SyncServices.SalesTable FindSalesOrder(string salesId) {
            return base.Channel.FindSalesOrder(salesId);
        }
        
        public SyncServices.SalesTable FindPickingList(string pickingId, string userName, string device) {
            return base.Channel.FindPickingList(pickingId, userName, device);
        }
        
        public SyncServices.SalesLine[] ValidatePallets(string salesId, string itemId, string configId, string pickingId, string[] pallets, string userName, string device, long lineRecId) {
            return base.Channel.ValidatePallets(salesId, itemId, configId, pickingId, pallets, userName, device, lineRecId);
        }
        
        public SyncServices.SalesLine CheckPalletAvailable(string salesId, string itemId, string configId, string pickingId, string pallet, string userName, string device, System.DateTime dtSave, long lineRecId) {
            return base.Channel.CheckPalletAvailable(salesId, itemId, configId, pickingId, pallet, userName, device, dtSave, lineRecId);
        }
        
        public SyncServices.SalesLine[] CheckPalletAvailableMulti(string salesId, string itemId, string configId, string pickingId, SyncServices.SalesOrderAX.PalletItemContract[] pallets, string userName, string device, long lineRecId) {
            return base.Channel.CheckPalletAvailableMulti(salesId, itemId, configId, pickingId, pallets, userName, device, lineRecId);
        }
        
        public string SalesDeliveryNote(string _salesId) {
            return base.Channel.SalesDeliveryNote(_salesId);
        }
        
        public string UnreservePallet(string pallet, string pickingId, string userName, string device) {
            return base.Channel.UnreservePallet(pallet, pickingId, userName, device);
        }
        
        public SyncServices.SalesLine[] GetLatestPallets(string pickingId, string itemId) {
            return base.Channel.GetLatestPallets(pickingId, itemId);
        }
        
        public void SavePickingLoad(string pickingId, System.DateTime startLoad, System.DateTime stopLoad) {
            base.Channel.SavePickingLoad(pickingId, startLoad, stopLoad);
        }
        
        public SyncServices.SalesOrderAX.CustomerDeliveryContract[] CustomersDeliveryByQty(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.CustomersDeliveryByQty(startDate, endDate);
        }
        
        public SyncServices.SalesOrderAX.CustomerDeliveryContract[] CustomersDeliveryByTrucks(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.CustomersDeliveryByTrucks(startDate, endDate);
        }
        
        public string GetPing() {
            return base.Channel.GetPing();
        }
        
        public SyncServices.SalesTable ReceivePickingList(string userName, string device) {
            return base.Channel.ReceivePickingList(userName, device);
        }
        
        public void SaveLoginHistory(string userName, string device, string deviceIp, string projectName) {
            base.Channel.SaveLoginHistory(userName, device, deviceIp, projectName);
        }
        
        public SyncServices.SalesOrderAX.FGLineContract[] GetFGLines() {
            return base.Channel.GetFGLines();
        }
        
        public SyncServices.SalesOrderAX.FGDeliveryContract[] GetDeliveries(System.DateTime dateSearch) {
            return base.Channel.GetDeliveries(dateSearch);
        }
        
        public SyncServices.UserData[] GetUserData() {
            return base.Channel.GetUserData();
        }
        
        public string ChangeLoadingLine(string pickingId, int loadingLineNum) {
            return base.Channel.ChangeLoadingLine(pickingId, loadingLineNum);
        }
    }
}
