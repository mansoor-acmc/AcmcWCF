//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebservice.DMCheckService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProxyBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.KernelInterop")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.XppObjectBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.ItemCodeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.WmsLocationContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportItemNumContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMSummaryContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportOfflineContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMForTransfer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportMiniContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportContract))]
    public partial class ProxyBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.ItemCodeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.WmsLocationContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportItemNumContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMSummaryContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportOfflineContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMForTransfer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportMiniContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.DMCheckService.DMExportContract))]
    public partial class XppObjectBase : TestWebservice.DMCheckService.ProxyBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemCodeContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class ItemCodeContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BoxPerPalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Desc1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Desc2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SacoBarcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SqmPerBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TilesPerBoxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BoxPerPallet {
            get {
                return this.BoxPerPalletField;
            }
            set {
                if ((this.BoxPerPalletField.Equals(value) != true)) {
                    this.BoxPerPalletField = value;
                    this.RaisePropertyChanged("BoxPerPallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc1 {
            get {
                return this.Desc1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Desc1Field, value) != true)) {
                    this.Desc1Field = value;
                    this.RaisePropertyChanged("Desc1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Desc2 {
            get {
                return this.Desc2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Desc2Field, value) != true)) {
                    this.Desc2Field = value;
                    this.RaisePropertyChanged("Desc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SacoBarcode {
            get {
                return this.SacoBarcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SacoBarcodeField, value) != true)) {
                    this.SacoBarcodeField = value;
                    this.RaisePropertyChanged("SacoBarcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SqmPerBox {
            get {
                return this.SqmPerBoxField;
            }
            set {
                if ((this.SqmPerBoxField.Equals(value) != true)) {
                    this.SqmPerBoxField = value;
                    this.RaisePropertyChanged("SqmPerBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TilesPerBox {
            get {
                return this.TilesPerBoxField;
            }
            set {
                if ((this.TilesPerBoxField.Equals(value) != true)) {
                    this.TilesPerBoxField = value;
                    this.RaisePropertyChanged("TilesPerBox");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WmsLocationContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class WmsLocationContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMExportItemNumContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMExportItemNumContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateSaveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HasProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateSave {
            get {
                return this.DateSaveField;
            }
            set {
                if ((this.DateSaveField.Equals(value) != true)) {
                    this.DateSaveField = value;
                    this.RaisePropertyChanged("DateSave");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HasProcessed {
            get {
                return this.HasProcessedField;
            }
            set {
                if ((this.HasProcessedField.Equals(value) != true)) {
                    this.HasProcessedField = value;
                    this.RaisePropertyChanged("HasProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMSummaryContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMSummaryContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaliberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfPalletsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfPalletsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfPalletsPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caliber {
            get {
                return this.CaliberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaliberField, value) != true)) {
                    this.CaliberField = value;
                    this.RaisePropertyChanged("Caliber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDescription {
            get {
                return this.ItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescriptionField, value) != true)) {
                    this.ItemDescriptionField = value;
                    this.RaisePropertyChanged("ItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfPallets {
            get {
                return this.NumOfPalletsField;
            }
            set {
                if ((this.NumOfPalletsField.Equals(value) != true)) {
                    this.NumOfPalletsField = value;
                    this.RaisePropertyChanged("NumOfPallets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfPalletsApproved {
            get {
                return this.NumOfPalletsApprovedField;
            }
            set {
                if ((this.NumOfPalletsApprovedField.Equals(value) != true)) {
                    this.NumOfPalletsApprovedField = value;
                    this.RaisePropertyChanged("NumOfPalletsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfPalletsPosted {
            get {
                return this.NumOfPalletsPostedField;
            }
            set {
                if ((this.NumOfPalletsPostedField.Equals(value) != true)) {
                    this.NumOfPalletsPostedField = value;
                    this.RaisePropertyChanged("NumOfPalletsPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shade {
            get {
                return this.ShadeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShadeField, value) != true)) {
                    this.ShadeField = value;
                    this.RaisePropertyChanged("Shade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalQty {
            get {
                return this.TotalQtyField;
            }
            set {
                if ((this.TotalQtyField.Equals(value) != true)) {
                    this.TotalQtyField = value;
                    this.RaisePropertyChanged("TotalQty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMExportOfflineContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMExportOfflineContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BoxesOnPalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaliberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedByFGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedBySLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWebservice.DMCheckService.NoYes IsOfflineModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whLocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BoxesOnPallet {
            get {
                return this.BoxesOnPalletField;
            }
            set {
                if ((this.BoxesOnPalletField.Equals(value) != true)) {
                    this.BoxesOnPalletField = value;
                    this.RaisePropertyChanged("BoxesOnPallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caliber {
            get {
                return this.CaliberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaliberField, value) != true)) {
                    this.CaliberField = value;
                    this.RaisePropertyChanged("Caliber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUser {
            get {
                return this.DeviceUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUserField, value) != true)) {
                    this.DeviceUserField = value;
                    this.RaisePropertyChanged("DeviceUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApprovedByFG {
            get {
                return this.IsApprovedByFGField;
            }
            set {
                if ((this.IsApprovedByFGField.Equals(value) != true)) {
                    this.IsApprovedByFGField = value;
                    this.RaisePropertyChanged("IsApprovedByFG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApprovedBySL {
            get {
                return this.IsApprovedBySLField;
            }
            set {
                if ((this.IsApprovedBySLField.Equals(value) != true)) {
                    this.IsApprovedBySLField = value;
                    this.RaisePropertyChanged("IsApprovedBySL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWebservice.DMCheckService.NoYes IsOfflineMode {
            get {
                return this.IsOfflineModeField;
            }
            set {
                if ((this.IsOfflineModeField.Equals(value) != true)) {
                    this.IsOfflineModeField = value;
                    this.RaisePropertyChanged("IsOfflineMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalletNum {
            get {
                return this.PalletNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletNumField, value) != true)) {
                    this.PalletNumField = value;
                    this.RaisePropertyChanged("PalletNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shade {
            get {
                return this.ShadeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShadeField, value) != true)) {
                    this.ShadeField = value;
                    this.RaisePropertyChanged("Shade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whLocationId {
            get {
                return this.whLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.whLocationIdField, value) != true)) {
                    this.whLocationIdField = value;
                    this.RaisePropertyChanged("whLocationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMForTransfer", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMForTransfer : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTransferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whLocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPosted {
            get {
                return this.IsPostedField;
            }
            set {
                if ((this.IsPostedField.Equals(value) != true)) {
                    this.IsPostedField = value;
                    this.RaisePropertyChanged("IsPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTransferred {
            get {
                return this.IsTransferredField;
            }
            set {
                if ((this.IsTransferredField.Equals(value) != true)) {
                    this.IsTransferredField = value;
                    this.RaisePropertyChanged("IsTransferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalletNum {
            get {
                return this.PalletNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletNumField, value) != true)) {
                    this.PalletNumField = value;
                    this.RaisePropertyChanged("PalletNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whLocationId {
            get {
                return this.whLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.whLocationIdField, value) != true)) {
                    this.whLocationIdField = value;
                    this.RaisePropertyChanged("whLocationId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMExportMiniContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMExportMiniContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodePalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DMShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DMShortDesc2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCodePallet {
            get {
                return this.BarCodePalletField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodePalletField, value) != true)) {
                    this.BarCodePalletField = value;
                    this.RaisePropertyChanged("BarCodePallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DMShortDesc {
            get {
                return this.DMShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DMShortDescField, value) != true)) {
                    this.DMShortDescField = value;
                    this.RaisePropertyChanged("DMShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DMShortDesc2 {
            get {
                return this.DMShortDesc2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DMShortDesc2Field, value) != true)) {
                    this.DMShortDesc2Field = value;
                    this.RaisePropertyChanged("DMShortDesc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalletNum {
            get {
                return this.PalletNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletNumField, value) != true)) {
                    this.PalletNumField = value;
                    this.RaisePropertyChanged("PalletNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DMExportContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    [System.SerializableAttribute()]
    public partial class DMExportContract : TestWebservice.DMCheckService.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodePalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BoxesOnPalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaliberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CancelDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CodeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DMShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DMShortDesc2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FGApprovalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedByFGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedBySLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWebservice.DMCheckService.PalletTransportBy LGVOrForkliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LineOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MarpakMovNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MovementNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PiecesForBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ShiftDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SurfaceMQBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPiecesOnPalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSurfaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WhichMarpakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whLocationIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCodePallet {
            get {
                return this.BarCodePalletField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodePalletField, value) != true)) {
                    this.BarCodePalletField = value;
                    this.RaisePropertyChanged("BarCodePallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BoxesOnPallet {
            get {
                return this.BoxesOnPalletField;
            }
            set {
                if ((this.BoxesOnPalletField.Equals(value) != true)) {
                    this.BoxesOnPalletField = value;
                    this.RaisePropertyChanged("BoxesOnPallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Caliber {
            get {
                return this.CaliberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaliberField, value) != true)) {
                    this.CaliberField = value;
                    this.RaisePropertyChanged("Caliber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CancelDateTime {
            get {
                return this.CancelDateTimeField;
            }
            set {
                if ((this.CancelDateTimeField.Equals(value) != true)) {
                    this.CancelDateTimeField = value;
                    this.RaisePropertyChanged("CancelDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CodeLabel {
            get {
                return this.CodeLabelField;
            }
            set {
                if ((this.CodeLabelField.Equals(value) != true)) {
                    this.CodeLabelField = value;
                    this.RaisePropertyChanged("CodeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DMShortDesc {
            get {
                return this.DMShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DMShortDescField, value) != true)) {
                    this.DMShortDescField = value;
                    this.RaisePropertyChanged("DMShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DMShortDesc2 {
            get {
                return this.DMShortDesc2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DMShortDesc2Field, value) != true)) {
                    this.DMShortDesc2Field = value;
                    this.RaisePropertyChanged("DMShortDesc2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUser {
            get {
                return this.DeviceUserField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUserField, value) != true)) {
                    this.DeviceUserField = value;
                    this.RaisePropertyChanged("DeviceUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FGApprovalTime {
            get {
                return this.FGApprovalTimeField;
            }
            set {
                if ((this.FGApprovalTimeField.Equals(value) != true)) {
                    this.FGApprovalTimeField = value;
                    this.RaisePropertyChanged("FGApprovalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApprovedByFG {
            get {
                return this.IsApprovedByFGField;
            }
            set {
                if ((this.IsApprovedByFGField.Equals(value) != true)) {
                    this.IsApprovedByFGField = value;
                    this.RaisePropertyChanged("IsApprovedByFG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApprovedBySL {
            get {
                return this.IsApprovedBySLField;
            }
            set {
                if ((this.IsApprovedBySLField.Equals(value) != true)) {
                    this.IsApprovedBySLField = value;
                    this.RaisePropertyChanged("IsApprovedBySL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCancelled {
            get {
                return this.IsCancelledField;
            }
            set {
                if ((this.IsCancelledField.Equals(value) != true)) {
                    this.IsCancelledField = value;
                    this.RaisePropertyChanged("IsCancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPosted {
            get {
                return this.IsPostedField;
            }
            set {
                if ((this.IsPostedField.Equals(value) != true)) {
                    this.IsPostedField = value;
                    this.RaisePropertyChanged("IsPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemDesc {
            get {
                return this.ItemDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemDescField, value) != true)) {
                    this.ItemDescField = value;
                    this.RaisePropertyChanged("ItemDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWebservice.DMCheckService.PalletTransportBy LGVOrForklift {
            get {
                return this.LGVOrForkliftField;
            }
            set {
                if ((this.LGVOrForkliftField.Equals(value) != true)) {
                    this.LGVOrForkliftField = value;
                    this.RaisePropertyChanged("LGVOrForklift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineOfOrigin {
            get {
                return this.LineOfOriginField;
            }
            set {
                if ((this.LineOfOriginField.Equals(value) != true)) {
                    this.LineOfOriginField = value;
                    this.RaisePropertyChanged("LineOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MarpakMovNum {
            get {
                return this.MarpakMovNumField;
            }
            set {
                if ((this.MarpakMovNumField.Equals(value) != true)) {
                    this.MarpakMovNumField = value;
                    this.RaisePropertyChanged("MarpakMovNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MovementNumber {
            get {
                return this.MovementNumberField;
            }
            set {
                if ((this.MovementNumberField.Equals(value) != true)) {
                    this.MovementNumberField = value;
                    this.RaisePropertyChanged("MovementNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalletNum {
            get {
                return this.PalletNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletNumField, value) != true)) {
                    this.PalletNumField = value;
                    this.RaisePropertyChanged("PalletNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PiecesForBox {
            get {
                return this.PiecesForBoxField;
            }
            set {
                if ((this.PiecesForBoxField.Equals(value) != true)) {
                    this.PiecesForBoxField = value;
                    this.RaisePropertyChanged("PiecesForBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Shade {
            get {
                return this.ShadeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShadeField, value) != true)) {
                    this.ShadeField = value;
                    this.RaisePropertyChanged("Shade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ShiftDate {
            get {
                return this.ShiftDateField;
            }
            set {
                if ((this.ShiftDateField.Equals(value) != true)) {
                    this.ShiftDateField = value;
                    this.RaisePropertyChanged("ShiftDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SurfaceMQBox {
            get {
                return this.SurfaceMQBoxField;
            }
            set {
                if ((this.SurfaceMQBoxField.Equals(value) != true)) {
                    this.SurfaceMQBoxField = value;
                    this.RaisePropertyChanged("SurfaceMQBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPiecesOnPallet {
            get {
                return this.TotalPiecesOnPalletField;
            }
            set {
                if ((this.TotalPiecesOnPalletField.Equals(value) != true)) {
                    this.TotalPiecesOnPalletField = value;
                    this.RaisePropertyChanged("TotalPiecesOnPallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSurface {
            get {
                return this.TotalSurfaceField;
            }
            set {
                if ((this.TotalSurfaceField.Equals(value) != true)) {
                    this.TotalSurfaceField = value;
                    this.RaisePropertyChanged("TotalSurface");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WhichMarpak {
            get {
                return this.WhichMarpakField;
            }
            set {
                if ((this.WhichMarpakField.Equals(value) != true)) {
                    this.WhichMarpakField = value;
                    this.RaisePropertyChanged("WhichMarpak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whLocationId {
            get {
                return this.whLocationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.whLocationIdField, value) != true)) {
                    this.whLocationIdField = value;
                    this.RaisePropertyChanged("whLocationId");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PalletTransportBy", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.AX.Application")]
    public enum PalletTransportBy : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LGV = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forklift = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoYes", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    public enum NoYes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DMCheckService.IDMCheckService")]
    public interface IDMCheckService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetPing", ReplyAction="http://tempuri.org/IDMCheckService/GetPingResponse")]
        string GetPing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetPalletInfo", ReplyAction="http://tempuri.org/IDMCheckService/GetPalletInfoResponse")]
        TestWebservice.DMCheckService.DMExportContract GetPalletInfo(string palletNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetPalletInfoByRecordId", ReplyAction="http://tempuri.org/IDMCheckService/GetPalletInfoByRecordIdResponse")]
        TestWebservice.DMCheckService.DMExportContract GetPalletInfoByRecordId(long recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/ConfirmPalletReceive", ReplyAction="http://tempuri.org/IDMCheckService/ConfirmPalletReceiveResponse")]
        bool ConfirmPalletReceive(string palletNum, long recordId, string deviceName, string deviceUser, bool isFromSL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/ConfirmPalletAndLocationReceive", ReplyAction="http://tempuri.org/IDMCheckService/ConfirmPalletAndLocationReceiveResponse")]
        string ConfirmPalletAndLocationReceive(string palletNum, string locationId, long recordId, string deviceName, string deviceUser, bool isFromSL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/CancelPalletReceive", ReplyAction="http://tempuri.org/IDMCheckService/CancelPalletReceiveResponse")]
        bool CancelPalletReceive(string palletNum, long recordId, string deviceName, string deviceUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/UpdateAndConfirmPalletReceive", ReplyAction="http://tempuri.org/IDMCheckService/UpdateAndConfirmPalletReceiveResponse")]
        bool UpdateAndConfirmPalletReceive(TestWebservice.DMCheckService.DMExportContract pallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/PrintAgainPallet", ReplyAction="http://tempuri.org/IDMCheckService/PrintAgainPalletResponse")]
        bool PrintAgainPallet(string palletNum, long recordId, string deviceName, string deviceUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/DMClearPrintAgain", ReplyAction="http://tempuri.org/IDMCheckService/DMClearPrintAgainResponse")]
        TestWebservice.DMCheckService.DMExportMiniContract[] DMClearPrintAgain();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/UpdateOfflinePallets", ReplyAction="http://tempuri.org/IDMCheckService/UpdateOfflinePalletsResponse")]
        TestWebservice.DMCheckService.DMExportContract[] UpdateOfflinePallets(TestWebservice.DMCheckService.DMExportOfflineContract[] lines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/TransferPalletsToNewLocation", ReplyAction="http://tempuri.org/IDMCheckService/TransferPalletsToNewLocationResponse")]
        SyncServices.LocationHistory[] TransferPalletsToNewLocation(SyncServices.LocationHistory[] lines);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/SummaryPallets", ReplyAction="http://tempuri.org/IDMCheckService/SummaryPalletsResponse")]
        TestWebservice.DMCheckService.DMSummaryContract[] SummaryPallets(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/ItemGroupPallets", ReplyAction="http://tempuri.org/IDMCheckService/ItemGroupPalletsResponse")]
        TestWebservice.DMCheckService.DMExportContract[] ItemGroupPallets(string itemId, string grade, string shade, string caliber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/CreateDowntimeForMarpak", ReplyAction="http://tempuri.org/IDMCheckService/CreateDowntimeForMarpakResponse")]
        bool CreateDowntimeForMarpak(int whichMarpak);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetProductionByLinesForChart", ReplyAction="http://tempuri.org/IDMCheckService/GetProductionByLinesForChartResponse")]
        SyncServices.ItemForChart[] GetProductionByLinesForChart(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetProductionByItemsForChart", ReplyAction="http://tempuri.org/IDMCheckService/GetProductionByItemsForChartResponse")]
        SyncServices.ItemForChart[] GetProductionByItemsForChart(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetWHLocations", ReplyAction="http://tempuri.org/IDMCheckService/GetWHLocationsResponse")]
        TestWebservice.DMCheckService.WmsLocationContract[] GetWHLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetDuplicatePallets", ReplyAction="http://tempuri.org/IDMCheckService/GetDuplicatePalletsResponse")]
        SyncServices.DuplicatePallet[] GetDuplicatePallets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/ClearDuplicatePallet", ReplyAction="http://tempuri.org/IDMCheckService/ClearDuplicatePalletResponse")]
        bool ClearDuplicatePallet(SyncServices.DuplicatePallet pallet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/ClearDuplicatePalletsAll", ReplyAction="http://tempuri.org/IDMCheckService/ClearDuplicatePalletsAllResponse")]
        bool ClearDuplicatePalletsAll(SyncServices.DuplicatePallet[] pallets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDMCheckService/GetItemCodes", ReplyAction="http://tempuri.org/IDMCheckService/GetItemCodesResponse")]
        TestWebservice.DMCheckService.ItemCodeContract[] GetItemCodes();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDMCheckServiceChannel : TestWebservice.DMCheckService.IDMCheckService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DMCheckServiceClient : System.ServiceModel.ClientBase<TestWebservice.DMCheckService.IDMCheckService>, TestWebservice.DMCheckService.IDMCheckService {
        
        public DMCheckServiceClient() {
        }
        
        public DMCheckServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DMCheckServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DMCheckServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DMCheckServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetPing() {
            return base.Channel.GetPing();
        }
        
        public TestWebservice.DMCheckService.DMExportContract GetPalletInfo(string palletNum) {
            return base.Channel.GetPalletInfo(palletNum);
        }
        
        public TestWebservice.DMCheckService.DMExportContract GetPalletInfoByRecordId(long recordId) {
            return base.Channel.GetPalletInfoByRecordId(recordId);
        }
        
        public bool ConfirmPalletReceive(string palletNum, long recordId, string deviceName, string deviceUser, bool isFromSL) {
            return base.Channel.ConfirmPalletReceive(palletNum, recordId, deviceName, deviceUser, isFromSL);
        }
        
        public string ConfirmPalletAndLocationReceive(string palletNum, string locationId, long recordId, string deviceName, string deviceUser, bool isFromSL) {
            return base.Channel.ConfirmPalletAndLocationReceive(palletNum, locationId, recordId, deviceName, deviceUser, isFromSL);
        }
        
        public bool CancelPalletReceive(string palletNum, long recordId, string deviceName, string deviceUser) {
            return base.Channel.CancelPalletReceive(palletNum, recordId, deviceName, deviceUser);
        }
        
        public bool UpdateAndConfirmPalletReceive(TestWebservice.DMCheckService.DMExportContract pallet) {
            return base.Channel.UpdateAndConfirmPalletReceive(pallet);
        }
        
        public bool PrintAgainPallet(string palletNum, long recordId, string deviceName, string deviceUser) {
            return base.Channel.PrintAgainPallet(palletNum, recordId, deviceName, deviceUser);
        }
        
        public TestWebservice.DMCheckService.DMExportMiniContract[] DMClearPrintAgain() {
            return base.Channel.DMClearPrintAgain();
        }
        
        public TestWebservice.DMCheckService.DMExportContract[] UpdateOfflinePallets(TestWebservice.DMCheckService.DMExportOfflineContract[] lines) {
            return base.Channel.UpdateOfflinePallets(lines);
        }
        
        public SyncServices.LocationHistory[] TransferPalletsToNewLocation(SyncServices.LocationHistory[] lines) {
            return base.Channel.TransferPalletsToNewLocation(lines);
        }
        
        public TestWebservice.DMCheckService.DMSummaryContract[] SummaryPallets(string itemId) {
            return base.Channel.SummaryPallets(itemId);
        }
        
        public TestWebservice.DMCheckService.DMExportContract[] ItemGroupPallets(string itemId, string grade, string shade, string caliber) {
            return base.Channel.ItemGroupPallets(itemId, grade, shade, caliber);
        }
        
        public bool CreateDowntimeForMarpak(int whichMarpak) {
            return base.Channel.CreateDowntimeForMarpak(whichMarpak);
        }
        
        public SyncServices.ItemForChart[] GetProductionByLinesForChart(System.DateTime date) {
            return base.Channel.GetProductionByLinesForChart(date);
        }
        
        public SyncServices.ItemForChart[] GetProductionByItemsForChart(System.DateTime date) {
            return base.Channel.GetProductionByItemsForChart(date);
        }
        
        public TestWebservice.DMCheckService.WmsLocationContract[] GetWHLocations() {
            return base.Channel.GetWHLocations();
        }
        
        public SyncServices.DuplicatePallet[] GetDuplicatePallets() {
            return base.Channel.GetDuplicatePallets();
        }
        
        public bool ClearDuplicatePallet(SyncServices.DuplicatePallet pallet) {
            return base.Channel.ClearDuplicatePallet(pallet);
        }
        
        public bool ClearDuplicatePalletsAll(SyncServices.DuplicatePallet[] pallets) {
            return base.Channel.ClearDuplicatePalletsAll(pallets);
        }
        
        public TestWebservice.DMCheckService.ItemCodeContract[] GetItemCodes() {
            return base.Channel.GetItemCodes();
        }
    }
}
