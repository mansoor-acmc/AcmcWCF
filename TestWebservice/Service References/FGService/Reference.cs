//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebservice.FGService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PalletEntity", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PalletEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BatchNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMatchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalletField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PresentInStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessByITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SyncIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatchNumber {
            get {
                return this.BatchNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BatchNumberField, value) != true)) {
                    this.BatchNumberField = value;
                    this.RaisePropertyChanged("BatchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Config {
            get {
                return this.ConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigField, value) != true)) {
                    this.ConfigField = value;
                    this.RaisePropertyChanged("Config");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManual {
            get {
                return this.IsManualField;
            }
            set {
                if ((this.IsManualField.Equals(value) != true)) {
                    this.IsManualField = value;
                    this.RaisePropertyChanged("IsManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMatched {
            get {
                return this.IsMatchedField;
            }
            set {
                if ((this.IsMatchedField.Equals(value) != true)) {
                    this.IsMatchedField = value;
                    this.RaisePropertyChanged("IsMatched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemNumber {
            get {
                return this.ItemNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNumberField, value) != true)) {
                    this.ItemNumberField = value;
                    this.RaisePropertyChanged("ItemNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pallet {
            get {
                return this.PalletField;
            }
            set {
                if ((object.ReferenceEquals(this.PalletField, value) != true)) {
                    this.PalletField = value;
                    this.RaisePropertyChanged("Pallet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PresentInStock {
            get {
                return this.PresentInStockField;
            }
            set {
                if ((this.PresentInStockField.Equals(value) != true)) {
                    this.PresentInStockField = value;
                    this.RaisePropertyChanged("PresentInStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessByIT {
            get {
                return this.ProcessByITField;
            }
            set {
                if ((this.ProcessByITField.Equals(value) != true)) {
                    this.ProcessByITField = value;
                    this.RaisePropertyChanged("ProcessByIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SyncId {
            get {
                return this.SyncIdField;
            }
            set {
                if ((this.SyncIdField.Equals(value) != true)) {
                    this.SyncIdField = value;
                    this.RaisePropertyChanged("SyncId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Warehouse {
            get {
                return this.WarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseField, value) != true)) {
                    this.WarehouseField = value;
                    this.RaisePropertyChanged("Warehouse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventAvailContract", Namespace="http://schemas.datacontract.org/2004/07/SyncServices.InventCountingService")]
    [System.SerializableAttribute()]
    public partial class InventAvailContract : TestWebservice.FGService.XppObjectBase {
        
        private decimal availPhysicalFieldField;
        
        private bool availPhysicalFieldSpecifiedField;
        
        private string batchIdFieldField;
        
        private string colorIdFieldField;
        
        private string configurationIdFieldField;
        
        private string itemIdFieldField;
        
        private string locationIdFieldField;
        
        private string productNameFieldField;
        
        private string serialIdFieldField;
        
        private string siteIdFieldField;
        
        private string sizeIdFieldField;
        
        private int syncIdFieldField;
        
        private bool syncIdFieldSpecifiedField;
        
        private string wMSLocationIdFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public decimal availPhysicalField {
            get {
                return this.availPhysicalFieldField;
            }
            set {
                if ((this.availPhysicalFieldField.Equals(value) != true)) {
                    this.availPhysicalFieldField = value;
                    this.RaisePropertyChanged("availPhysicalField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool availPhysicalFieldSpecified {
            get {
                return this.availPhysicalFieldSpecifiedField;
            }
            set {
                if ((this.availPhysicalFieldSpecifiedField.Equals(value) != true)) {
                    this.availPhysicalFieldSpecifiedField = value;
                    this.RaisePropertyChanged("availPhysicalFieldSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string batchIdField {
            get {
                return this.batchIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.batchIdFieldField, value) != true)) {
                    this.batchIdFieldField = value;
                    this.RaisePropertyChanged("batchIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string colorIdField {
            get {
                return this.colorIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.colorIdFieldField, value) != true)) {
                    this.colorIdFieldField = value;
                    this.RaisePropertyChanged("colorIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string configurationIdField {
            get {
                return this.configurationIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.configurationIdFieldField, value) != true)) {
                    this.configurationIdFieldField = value;
                    this.RaisePropertyChanged("configurationIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string itemIdField {
            get {
                return this.itemIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.itemIdFieldField, value) != true)) {
                    this.itemIdFieldField = value;
                    this.RaisePropertyChanged("itemIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string locationIdField {
            get {
                return this.locationIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.locationIdFieldField, value) != true)) {
                    this.locationIdFieldField = value;
                    this.RaisePropertyChanged("locationIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string productNameField {
            get {
                return this.productNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameFieldField, value) != true)) {
                    this.productNameFieldField = value;
                    this.RaisePropertyChanged("productNameField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string serialIdField {
            get {
                return this.serialIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.serialIdFieldField, value) != true)) {
                    this.serialIdFieldField = value;
                    this.RaisePropertyChanged("serialIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string siteIdField {
            get {
                return this.siteIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.siteIdFieldField, value) != true)) {
                    this.siteIdFieldField = value;
                    this.RaisePropertyChanged("siteIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string sizeIdField {
            get {
                return this.sizeIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.sizeIdFieldField, value) != true)) {
                    this.sizeIdFieldField = value;
                    this.RaisePropertyChanged("sizeIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int syncIdField {
            get {
                return this.syncIdFieldField;
            }
            set {
                if ((this.syncIdFieldField.Equals(value) != true)) {
                    this.syncIdFieldField = value;
                    this.RaisePropertyChanged("syncIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool syncIdFieldSpecified {
            get {
                return this.syncIdFieldSpecifiedField;
            }
            set {
                if ((this.syncIdFieldSpecifiedField.Equals(value) != true)) {
                    this.syncIdFieldSpecifiedField = value;
                    this.RaisePropertyChanged("syncIdFieldSpecified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string wMSLocationIdField {
            get {
                return this.wMSLocationIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.wMSLocationIdFieldField, value) != true)) {
                    this.wMSLocationIdFieldField = value;
                    this.RaisePropertyChanged("wMSLocationIdField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/SyncServices.InventCountingService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.FGService.InventAvailContract))]
    public partial class XppObjectBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.ComponentModel.PropertyChangedEventHandler PropertyChanged1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="PropertyChanged", IsRequired=true)]
        public System.ComponentModel.PropertyChangedEventHandler PropertyChanged1 {
            get {
                return this.PropertyChanged1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyChanged1Field, value) != true)) {
                    this.PropertyChanged1Field = value;
                    this.RaisePropertyChanged("PropertyChanged1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FGService.IFGSyncService")]
    public interface IFGSyncService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFGSyncService/ResetData", ReplyAction="http://tempuri.org/IFGSyncService/ResetDataResponse")]
        TestWebservice.FGService.PalletEntity[] ResetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFGSyncService/GetFGYearInventory", ReplyAction="http://tempuri.org/IFGSyncService/GetFGYearInventoryResponse")]
        TestWebservice.FGService.InventAvailContract[] GetFGYearInventory(int startId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFGSyncService/GetUserData", ReplyAction="http://tempuri.org/IFGSyncService/GetUserDataResponse")]
        TestWebservice.FGService.UserData[] GetUserData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFGSyncService/UpdateFGDesktop", ReplyAction="http://tempuri.org/IFGSyncService/UpdateFGDesktopResponse")]
        long UpdateFGDesktop(TestWebservice.FGService.PalletEntity[] dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFGSyncService/GetPing", ReplyAction="http://tempuri.org/IFGSyncService/GetPingResponse")]
        string GetPing();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFGSyncServiceChannel : TestWebservice.FGService.IFGSyncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FGSyncServiceClient : System.ServiceModel.ClientBase<TestWebservice.FGService.IFGSyncService>, TestWebservice.FGService.IFGSyncService {
        
        public FGSyncServiceClient() {
        }
        
        public FGSyncServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FGSyncServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FGSyncServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FGSyncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestWebservice.FGService.PalletEntity[] ResetData() {
            return base.Channel.ResetData();
        }
        
        public TestWebservice.FGService.InventAvailContract[] GetFGYearInventory(int startId) {
            return base.Channel.GetFGYearInventory(startId);
        }
        
        public TestWebservice.FGService.UserData[] GetUserData() {
            return base.Channel.GetUserData();
        }
        
        public long UpdateFGDesktop(TestWebservice.FGService.PalletEntity[] dt) {
            return base.Channel.UpdateFGDesktop(dt);
        }
        
        public string GetPing() {
            return base.Channel.GetPing();
        }
    }
}
