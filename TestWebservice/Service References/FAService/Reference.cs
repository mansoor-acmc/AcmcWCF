//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebservice.FAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FAService.IFixedAssetService")]
    public interface IFixedAssetService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/ResetData", ReplyAction="http://tempuri.org/IFixedAssetService/ResetDataResponse")]
        SyncServices.FAEntity[] ResetData(string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/ResetData", ReplyAction="http://tempuri.org/IFixedAssetService/ResetDataResponse")]
        System.Threading.Tasks.Task<SyncServices.FAEntity[]> ResetDataAsync(string company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/GetPing", ReplyAction="http://tempuri.org/IFixedAssetService/GetPingResponse")]
        string GetPing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/GetPing", ReplyAction="http://tempuri.org/IFixedAssetService/GetPingResponse")]
        System.Threading.Tasks.Task<string> GetPingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/GetUserData", ReplyAction="http://tempuri.org/IFixedAssetService/GetUserDataResponse")]
        SyncServices.UserData[] GetUserData(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/GetUserData", ReplyAction="http://tempuri.org/IFixedAssetService/GetUserDataResponse")]
        System.Threading.Tasks.Task<SyncServices.UserData[]> GetUserDataAsync(string companyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/UpdateFixedAssetDesktop", ReplyAction="http://tempuri.org/IFixedAssetService/UpdateFixedAssetDesktopResponse")]
        long UpdateFixedAssetDesktop(SyncServices.FAEntity[] dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFixedAssetService/UpdateFixedAssetDesktop", ReplyAction="http://tempuri.org/IFixedAssetService/UpdateFixedAssetDesktopResponse")]
        System.Threading.Tasks.Task<long> UpdateFixedAssetDesktopAsync(SyncServices.FAEntity[] dt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFixedAssetServiceChannel : TestWebservice.FAService.IFixedAssetService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FixedAssetServiceClient : System.ServiceModel.ClientBase<TestWebservice.FAService.IFixedAssetService>, TestWebservice.FAService.IFixedAssetService {
        
        public FixedAssetServiceClient() {
        }
        
        public FixedAssetServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FixedAssetServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FixedAssetServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FixedAssetServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SyncServices.FAEntity[] ResetData(string company) {
            return base.Channel.ResetData(company);
        }
        
        public System.Threading.Tasks.Task<SyncServices.FAEntity[]> ResetDataAsync(string company) {
            return base.Channel.ResetDataAsync(company);
        }
        
        public string GetPing() {
            return base.Channel.GetPing();
        }
        
        public System.Threading.Tasks.Task<string> GetPingAsync() {
            return base.Channel.GetPingAsync();
        }
        
        public SyncServices.UserData[] GetUserData(string companyName) {
            return base.Channel.GetUserData(companyName);
        }
        
        public System.Threading.Tasks.Task<SyncServices.UserData[]> GetUserDataAsync(string companyName) {
            return base.Channel.GetUserDataAsync(companyName);
        }
        
        public long UpdateFixedAssetDesktop(SyncServices.FAEntity[] dt) {
            return base.Channel.UpdateFixedAssetDesktop(dt);
        }
        
        public System.Threading.Tasks.Task<long> UpdateFixedAssetDesktopAsync(SyncServices.FAEntity[] dt) {
            return base.Channel.UpdateFixedAssetDesktopAsync(dt);
        }
    }
}
