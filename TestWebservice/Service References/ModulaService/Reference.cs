//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWebservice.ModulaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemEntity", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class ItemEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AvailableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMatchedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LockDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PhysicalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProcessByITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SyncIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UoMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableCount {
            get {
                return this.AvailableCountField;
            }
            set {
                if ((this.AvailableCountField.Equals(value) != true)) {
                    this.AvailableCountField = value;
                    this.RaisePropertyChanged("AvailableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUpdated {
            get {
                return this.DateUpdatedField;
            }
            set {
                if ((this.DateUpdatedField.Equals(value) != true)) {
                    this.DateUpdatedField = value;
                    this.RaisePropertyChanged("DateUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManual {
            get {
                return this.IsManualField;
            }
            set {
                if ((this.IsManualField.Equals(value) != true)) {
                    this.IsManualField = value;
                    this.RaisePropertyChanged("IsManual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMatched {
            get {
                return this.IsMatchedField;
            }
            set {
                if ((this.IsMatchedField.Equals(value) != true)) {
                    this.IsMatchedField = value;
                    this.RaisePropertyChanged("IsMatched");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LockDate {
            get {
                return this.LockDateField;
            }
            set {
                if ((this.LockDateField.Equals(value) != true)) {
                    this.LockDateField = value;
                    this.RaisePropertyChanged("LockDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PhysicalCount {
            get {
                return this.PhysicalCountField;
            }
            set {
                if ((this.PhysicalCountField.Equals(value) != true)) {
                    this.PhysicalCountField = value;
                    this.RaisePropertyChanged("PhysicalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProcessByIT {
            get {
                return this.ProcessByITField;
            }
            set {
                if ((this.ProcessByITField.Equals(value) != true)) {
                    this.ProcessByITField = value;
                    this.RaisePropertyChanged("ProcessByIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SyncId {
            get {
                return this.SyncIdField;
            }
            set {
                if ((this.SyncIdField.Equals(value) != true)) {
                    this.SyncIdField = value;
                    this.RaisePropertyChanged("SyncId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UoM {
            get {
                return this.UoMField;
            }
            set {
                if ((object.ReferenceEquals(this.UoMField, value) != true)) {
                    this.UoMField = value;
                    this.RaisePropertyChanged("UoM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WOPool", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class WOPool : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderPoolCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderPoolCode {
            get {
                return this.WorkOrderPoolCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderPoolCodeField, value) != true)) {
                    this.WorkOrderPoolCodeField = value;
                    this.RaisePropertyChanged("WorkOrderPoolCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMEquipment", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PMEquipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWebservice.ModulaService.EquipCatalog[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentGroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWebservice.ModulaService.EquipCatalog[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentGroupCode {
            get {
                return this.EquipmentGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentGroupCodeField, value) != true)) {
                    this.EquipmentGroupCodeField = value;
                    this.RaisePropertyChanged("EquipmentGroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentID {
            get {
                return this.EquipmentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentIDField, value) != true)) {
                    this.EquipmentIDField = value;
                    this.RaisePropertyChanged("EquipmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentName {
            get {
                return this.EquipmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentNameField, value) != true)) {
                    this.EquipmentNameField = value;
                    this.RaisePropertyChanged("EquipmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationName {
            get {
                return this.LocationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationNameField, value) != true)) {
                    this.LocationNameField = value;
                    this.RaisePropertyChanged("LocationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipCatalog", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class EquipCatalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileExtensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDescription {
            get {
                return this.FileDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDescriptionField, value) != true)) {
                    this.FileDescriptionField = value;
                    this.RaisePropertyChanged("FileDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileExtension {
            get {
                return this.FileExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionField, value) != true)) {
                    this.FileExtensionField = value;
                    this.RaisePropertyChanged("FileExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMFailureCode", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PMFailureCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureCode {
            get {
                return this.FailureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureCodeField, value) != true)) {
                    this.FailureCodeField = value;
                    this.RaisePropertyChanged("FailureCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMRepairCode", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PMRepairCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepairCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureCode {
            get {
                return this.FailureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureCodeField, value) != true)) {
                    this.FailureCodeField = value;
                    this.RaisePropertyChanged("FailureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepairCode {
            get {
                return this.RepairCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairCodeField, value) != true)) {
                    this.RepairCodeField = value;
                    this.RaisePropertyChanged("RepairCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WOTypeContract", Namespace="http://schemas.datacontract.org/2004/07/SyncServices.EAMServices")]
    [System.SerializableAttribute()]
    public partial class WOTypeContract : TestWebservice.ModulaService.XppObjectBase {
        
        private string codeFieldField;
        
        private string labelFieldField;
        
        private int valueFieldField;
        
        private bool valueFieldSpecifiedField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string codeField {
            get {
                return this.codeFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.codeFieldField, value) != true)) {
                    this.codeFieldField = value;
                    this.RaisePropertyChanged("codeField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string labelField {
            get {
                return this.labelFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.labelFieldField, value) != true)) {
                    this.labelFieldField = value;
                    this.RaisePropertyChanged("labelField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int valueField {
            get {
                return this.valueFieldField;
            }
            set {
                if ((this.valueFieldField.Equals(value) != true)) {
                    this.valueFieldField = value;
                    this.RaisePropertyChanged("valueField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool valueFieldSpecified {
            get {
                return this.valueFieldSpecifiedField;
            }
            set {
                if ((this.valueFieldSpecifiedField.Equals(value) != true)) {
                    this.valueFieldSpecifiedField = value;
                    this.RaisePropertyChanged("valueFieldSpecified");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/SyncServices.EAMServices")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.ModulaService.WOLocationContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWebservice.ModulaService.WOTypeContract))]
    public partial class XppObjectBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.ComponentModel.PropertyChangedEventHandler PropertyChanged1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="PropertyChanged", IsRequired=true)]
        public System.ComponentModel.PropertyChangedEventHandler PropertyChanged1 {
            get {
                return this.PropertyChanged1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyChanged1Field, value) != true)) {
                    this.PropertyChanged1Field = value;
                    this.RaisePropertyChanged("PropertyChanged1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WOLocationContract", Namespace="http://schemas.datacontract.org/2004/07/SyncServices.EAMServices")]
    [System.SerializableAttribute()]
    public partial class WOLocationContract : TestWebservice.ModulaService.XppObjectBase {
        
        private string assetLocationIdFieldField;
        
        private string assetLocationNameFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string assetLocationIdField {
            get {
                return this.assetLocationIdFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.assetLocationIdFieldField, value) != true)) {
                    this.assetLocationIdFieldField = value;
                    this.RaisePropertyChanged("assetLocationIdField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string assetLocationNameField {
            get {
                return this.assetLocationNameFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.assetLocationNameFieldField, value) != true)) {
                    this.assetLocationNameFieldField = value;
                    this.RaisePropertyChanged("assetLocationNameField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMWorkItem", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PMWorkItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ItemRecIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sto_HostRIFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Sto_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sto_RequesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UoMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WOPkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemID {
            get {
                return this.ItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIDField, value) != true)) {
                    this.ItemIDField = value;
                    this.RaisePropertyChanged("ItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ItemRecId {
            get {
                return this.ItemRecIdField;
            }
            set {
                if ((this.ItemRecIdField.Equals(value) != true)) {
                    this.ItemRecIdField = value;
                    this.RaisePropertyChanged("ItemRecId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sto_HostRIF {
            get {
                return this.Sto_HostRIFField;
            }
            set {
                if ((object.ReferenceEquals(this.Sto_HostRIFField, value) != true)) {
                    this.Sto_HostRIFField = value;
                    this.RaisePropertyChanged("Sto_HostRIF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sto_ID {
            get {
                return this.Sto_IDField;
            }
            set {
                if ((this.Sto_IDField.Equals(value) != true)) {
                    this.Sto_IDField = value;
                    this.RaisePropertyChanged("Sto_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sto_Requester {
            get {
                return this.Sto_RequesterField;
            }
            set {
                if ((object.ReferenceEquals(this.Sto_RequesterField, value) != true)) {
                    this.Sto_RequesterField = value;
                    this.RaisePropertyChanged("Sto_Requester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UoM {
            get {
                return this.UoMField;
            }
            set {
                if ((object.ReferenceEquals(this.UoMField, value) != true)) {
                    this.UoMField = value;
                    this.RaisePropertyChanged("UoM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WOPkId {
            get {
                return this.WOPkIdField;
            }
            set {
                if ((this.WOPkIdField.Equals(value) != true)) {
                    this.WOPkIdField = value;
                    this.RaisePropertyChanged("WOPkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderID {
            get {
                return this.WorkOrderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderIDField, value) != true)) {
                    this.WorkOrderIDField = value;
                    this.RaisePropertyChanged("WorkOrderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PMWorkOrder", Namespace="http://schemas.datacontract.org/2004/07/SyncServices")]
    [System.SerializableAttribute()]
    public partial class PMWorkOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepairCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TablePkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WOEquipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WOPoolCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WOStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WOTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestWebservice.ModulaService.PMWorkItem[] WorkItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureCode {
            get {
                return this.FailureCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureCodeField, value) != true)) {
                    this.FailureCodeField = value;
                    this.RaisePropertyChanged("FailureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepairCode {
            get {
                return this.RepairCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RepairCodeField, value) != true)) {
                    this.RepairCodeField = value;
                    this.RaisePropertyChanged("RepairCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestBy {
            get {
                return this.RequestByField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestByField, value) != true)) {
                    this.RequestByField = value;
                    this.RaisePropertyChanged("RequestBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TablePk {
            get {
                return this.TablePkField;
            }
            set {
                if ((this.TablePkField.Equals(value) != true)) {
                    this.TablePkField = value;
                    this.RaisePropertyChanged("TablePk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WOEquipment {
            get {
                return this.WOEquipmentField;
            }
            set {
                if ((object.ReferenceEquals(this.WOEquipmentField, value) != true)) {
                    this.WOEquipmentField = value;
                    this.RaisePropertyChanged("WOEquipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WOPoolCode {
            get {
                return this.WOPoolCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WOPoolCodeField, value) != true)) {
                    this.WOPoolCodeField = value;
                    this.RaisePropertyChanged("WOPoolCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WOStatus {
            get {
                return this.WOStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.WOStatusField, value) != true)) {
                    this.WOStatusField = value;
                    this.RaisePropertyChanged("WOStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WOType {
            get {
                return this.WOTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.WOTypeField, value) != true)) {
                    this.WOTypeField = value;
                    this.RaisePropertyChanged("WOType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestWebservice.ModulaService.PMWorkItem[] WorkItems {
            get {
                return this.WorkItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkItemsField, value) != true)) {
                    this.WorkItemsField = value;
                    this.RaisePropertyChanged("WorkItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderID {
            get {
                return this.WorkOrderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderIDField, value) != true)) {
                    this.WorkOrderIDField = value;
                    this.RaisePropertyChanged("WorkOrderID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModulaService.IModulaPR")]
    public interface IModulaPR {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetItem", ReplyAction="http://tempuri.org/IModulaPR/GetItemResponse")]
        TestWebservice.ModulaService.ItemEntity GetItem(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetItems", ReplyAction="http://tempuri.org/IModulaPR/GetItemsResponse")]
        TestWebservice.ModulaService.ItemEntity[] GetItems(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetWOPools", ReplyAction="http://tempuri.org/IModulaPR/GetWOPoolsResponse")]
        TestWebservice.ModulaService.WOPool[] GetWOPools();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetEquipments", ReplyAction="http://tempuri.org/IModulaPR/GetEquipmentsResponse")]
        TestWebservice.ModulaService.PMEquipment[] GetEquipments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetFailureCodes", ReplyAction="http://tempuri.org/IModulaPR/GetFailureCodesResponse")]
        TestWebservice.ModulaService.PMFailureCode[] GetFailureCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetRepairCodes", ReplyAction="http://tempuri.org/IModulaPR/GetRepairCodesResponse")]
        TestWebservice.ModulaService.PMRepairCode[] GetRepairCodes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetEquipment", ReplyAction="http://tempuri.org/IModulaPR/GetEquipmentResponse")]
        TestWebservice.ModulaService.PMEquipment GetEquipment(string equipId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetWorkOrderTypes", ReplyAction="http://tempuri.org/IModulaPR/GetWorkOrderTypesResponse")]
        TestWebservice.ModulaService.WOTypeContract[] GetWorkOrderTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetEquipLocations", ReplyAction="http://tempuri.org/IModulaPR/GetEquipLocationsResponse")]
        TestWebservice.ModulaService.WOLocationContract[] GetEquipLocations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetInlineWorkItems", ReplyAction="http://tempuri.org/IModulaPR/GetInlineWorkItemsResponse")]
        TestWebservice.ModulaService.PMWorkItem[] GetInlineWorkItems(string workOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetOtherWorkItems", ReplyAction="http://tempuri.org/IModulaPR/GetOtherWorkItemsResponse")]
        TestWebservice.ModulaService.PMWorkItem[] GetOtherWorkItems(string workOrderId, string search, int topRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/SaveWorkOrder", ReplyAction="http://tempuri.org/IModulaPR/SaveWorkOrderResponse")]
        TestWebservice.ModulaService.PMWorkOrder SaveWorkOrder(TestWebservice.ModulaService.PMWorkOrder entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/SetWorkOrderStatus", ReplyAction="http://tempuri.org/IModulaPR/SetWorkOrderStatusResponse")]
        int SetWorkOrderStatus(string workOrderId, int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/DeleteWorkItem", ReplyAction="http://tempuri.org/IModulaPR/DeleteWorkItemResponse")]
        int DeleteWorkItem(string workOrderId, int sto_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModulaPR/GetPing", ReplyAction="http://tempuri.org/IModulaPR/GetPingResponse")]
        string GetPing();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModulaPRChannel : TestWebservice.ModulaService.IModulaPR, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModulaPRClient : System.ServiceModel.ClientBase<TestWebservice.ModulaService.IModulaPR>, TestWebservice.ModulaService.IModulaPR {
        
        public ModulaPRClient() {
        }
        
        public ModulaPRClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModulaPRClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModulaPRClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModulaPRClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestWebservice.ModulaService.ItemEntity GetItem(string itemId) {
            return base.Channel.GetItem(itemId);
        }
        
        public TestWebservice.ModulaService.ItemEntity[] GetItems(string search) {
            return base.Channel.GetItems(search);
        }
        
        public TestWebservice.ModulaService.WOPool[] GetWOPools() {
            return base.Channel.GetWOPools();
        }
        
        public TestWebservice.ModulaService.PMEquipment[] GetEquipments() {
            return base.Channel.GetEquipments();
        }
        
        public TestWebservice.ModulaService.PMFailureCode[] GetFailureCodes() {
            return base.Channel.GetFailureCodes();
        }
        
        public TestWebservice.ModulaService.PMRepairCode[] GetRepairCodes() {
            return base.Channel.GetRepairCodes();
        }
        
        public TestWebservice.ModulaService.PMEquipment GetEquipment(string equipId) {
            return base.Channel.GetEquipment(equipId);
        }
        
        public TestWebservice.ModulaService.WOTypeContract[] GetWorkOrderTypes() {
            return base.Channel.GetWorkOrderTypes();
        }
        
        public TestWebservice.ModulaService.WOLocationContract[] GetEquipLocations() {
            return base.Channel.GetEquipLocations();
        }
        
        public TestWebservice.ModulaService.PMWorkItem[] GetInlineWorkItems(string workOrderId) {
            return base.Channel.GetInlineWorkItems(workOrderId);
        }
        
        public TestWebservice.ModulaService.PMWorkItem[] GetOtherWorkItems(string workOrderId, string search, int topRecords) {
            return base.Channel.GetOtherWorkItems(workOrderId, search, topRecords);
        }
        
        public TestWebservice.ModulaService.PMWorkOrder SaveWorkOrder(TestWebservice.ModulaService.PMWorkOrder entity) {
            return base.Channel.SaveWorkOrder(entity);
        }
        
        public int SetWorkOrderStatus(string workOrderId, int statusId) {
            return base.Channel.SetWorkOrderStatus(workOrderId, statusId);
        }
        
        public int DeleteWorkItem(string workOrderId, int sto_id) {
            return base.Channel.DeleteWorkItem(workOrderId, sto_id);
        }
        
        public string GetPing() {
            return base.Channel.GetPing();
        }
    }
}
